apiVersion: v1
kind: Service
metadata:
  name: couchdb0-org1
  annotations:
    external-dns.alpha.kubernetes.io/hostname: couchdb0.org1.example.com
    external-dns.alpha.kubernetes.io/target: couchdb0.org1.example.com
spec:
  selector:
    app: couchdb0
    tier: database
  ports:
    - protocol: TCP
      targetPort: couchdb0-port
      port: 5984
      nodePort: 30005
      name: couchdb0-port
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: couchdb0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: couchdb0
  template:
    metadata:
      labels:
        app: couchdb0
        tier: database
        track: stable
    spec:
#      securityContext:
#        runAsUser: 1000
#        fsGroup: 2000
      volumes:
      - name: data
        persistentVolumeClaim: 
          claimName: {{ .Release.Name }}-couchdb0-org1-pvc
      initContainers: 
      - name: init-couchdb0-org1
        image: "hyperledger/fabric-couchdb:latest"
        command: 
        - "chown"
        - "-R"
        - "couchdb:couchdb"
        - "/opt/couchdb0"
        volumeMounts:
        - mountPath: /opt/couchdb0/data
          name: data
      containers:
        - name: couchdb0-org1
          image: "hyperledger/fabric-couchdb:latest"
          volumeMounts:
          - mountPath: /opt/couchdb/data
            name: data
          env:
            - name: COUCHDB_USER
              value: "CouchOrci0"
            - name: COUCHDB_PASSWORD
              value: "CouchOrciDB00"
          ports:
            - name: couchdb0-port
              containerPort: 5984
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-couchdb0-org1-pvc
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-couchdb0-org1-pvc
spec:
  storageClassName: gp2
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
